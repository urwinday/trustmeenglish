plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'net.ltgt.apt' version '0.20'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'net.ltgt.apt-idea'

group = 'com.trustmeenglish'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	compileOnly {
		extendsFrom developmentOnly
	}
}

ext {
	mapstructVersion = "1.4.0.Beta1"
}

compileJava {
	options.compilerArgs = [
			'-Amapstruct.defaultComponentModel=spring',
	]
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	/*implementation 'org.liquibase:liquibase-core'*/
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'

	compile "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	// If you are using mapstruct in test code
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
}

test {
	useJUnitPlatform()
}
